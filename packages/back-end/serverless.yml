service: lockcept-world

plugins:
  - serverless-dynamodb-local
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager

frameworkVersion: "2"

custom:
  customDomain:
    domainName: "api.lockcept.kr"
    basePath: ${self:provider.stage}
    stage: ${self:provider.stage}
    createRoute53Record: true
  serverless-offline:
    noPrependStageInUrl: true
    useChildProcesses: true
    httpPort: 4000
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
  custom:
    webpack:
      includeModules: true
      keepOutputDirectory: true
  tables:
    lockcept-table: ${self:service}-lockcept-table-${self:provider.stage}
    user-table: ${self:service}-user-table-${self:provider.stage}
    unique-email-table: ${self:service}-unique-email-table-${self:provider.stage}
    unique-user-name-table: ${self:service}-unique-user-name-table-${self:provider.stage}
    account-table: ${self:service}-account-table-${self:provider.stage}

provider:
  name: aws
  stackTags:
    project: lockcept.kr
  stage: ${ opt:stage, "dev" }
  region: ap-northeast-2
  runtime: nodejs12.x
  environment:
    STAGE: ${self:provider.stage}
    LOCKCEPT_TABLE: ${self:custom.tables.lockcept-table
    USER_TABLE: ${self:custom.tables.user-table}
    UNIQUE_EMAIL_TABLE: ${self:custom.tables.unique-email-table}
    UNIQUE_USER_NAME_TABLE: ${self:custom.tables.unique-user-name-table}
    ACCOUNT_TABLE: ${self:custom.tables.account-table}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"

functions:
  lockcept:
    handler: src/handler/index.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

resources:
  Resources:
    lockceptTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.tables.lockcept-table}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    userTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.tables.user-table}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    UniqueEmailTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.tables.unique-email-table}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: IdIndex
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    UniqueUserNameTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.tables.unique-user-name-table}
        AttributeDefinitions:
          - AttributeName: userName
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: userName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: IdIndex
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    accountTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.tables.account-table}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
